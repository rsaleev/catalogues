services:
  postgres:
    env_file: .env
    restart: unless-stopped
    build:
      context: ..
      dockerfile: ./docker/database/Dockerfile
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - database:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_EXTERNAL_PORT}:${POSTGRES_PORT}
    container_name: catalogues_database
    networks:
      - catalogues
      - dbnet
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 4G
    shm_size: '256mb'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --username ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      

  fastapi-unit:
    env_file: .env
    restart: unless-stopped
    build:
      context: ..  
      dockerfile: ./docker/app/Dockerfile
    links:
     - postgres
    depends_on:
      postgres:
       condition: service_healthy
    networks:
      - catalogues
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=${POSTGRES_PORT}
      - DB_HOST=postgres
    volumes:
     - app:/var/www:rw
    container_name: catalogues_web
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 2G
      

volumes:
  app: {}
  database: {}

networks:
  catalogues:
    driver: bridge
  dbnet:
    external: true

  